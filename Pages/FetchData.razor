@page "/mfp-data-analysis"
@inject HttpClient Http
@using Microsoft.Extensions.Logging

<PageTitle>MFP Data Analysis | islandmonkey.uk</PageTitle>

<h1>MFP Data Analysis</h1>

<p><b>Problem:</b> When trying to analyse nutrition data inside the MyFitnessPal app, you have two options, by individual day, or by calendar week.</p>
<p><b>Solution: MFP Data Analyser!</b> If you have purchased MyFitnessPal Premium, you can export your nutritional data to a CSV file. Upload your CSV file here for advanced analysis of the data. Features include:</p>
<ul>
    <li>Analysis of any nutritional data for any range of dates, weeks, or months</li>
    <li>Isolate nutritional data as a date range of breakfasts, lunches, dinners, snacks...</li>
    <li>Understand your nutritional data in more detail.</li>
</ul>

<em>You need MyFitnessPal Premium to export CSV files.</em>


@inject ILogger<FetchData> Logger

<!--From https://github.com/dotnet/blazor-samples/blob/547f2f8609a80525cfc1a2d0d00b5292f9ed8718/7.0/BlazorSample_WebAssembly/Pages/file-uploads/FileUpload1.razor
    The MIT License (MIT) Copyright (c) Microsoft Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->

<h3>Upload Files</h3>

<p>
    <label>
        Upload a file up to @maxFileSize bytes:
        <InputFile OnChange="@LoadFiles" />
    </label>
</p>

@if (isLoading)
{
    <p>Uploading...</p>
}
else
{
    <ul>
        @foreach (var file in loadedFile)
        {
            <li>
                <ul>
                    <li>Name: @file.Name</li>
                    <li>Last modified: @file.LastModified.ToString()</li>
                    <li>Size (bytes): @file.Size</li>
                    <li>Content type: @file.ContentType</li>
                </ul>
            </li>
        }
    </ul>

}

@code {
    private List<IBrowserFile> loadedFile = new();
    public long maxFileSize = 50000;
    private bool isLoading;

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        loadedFile.Clear();
        var file = e.File;
        try
            {
                if(file.ContentType.Equals("text/csv") && IsReasonableSize())
                {
                    loadedFile.Add(file);
                }
                else if(!file.ContentType.Equals("text/csv") && !IsReasonableSize)
                {
                    Logger.LogError("File: {FileName} Error: File uploaded exceeds maximum limit, or is not a CSV file. Aborting.", file.Name);
                    throw new Exception();
                }

            }
            catch (Exception ex)
            {
                Logger.LogError("File: {FileName} Error: {Error}",
                    file.Name, ex.Message);
            }
        isLoading = false;
    }

    private bool IsReasonableSize()
    {
        foreach(var validateFileSize in loadedFile)
        {
            if(validateFileSize.Size =< maxFileSize)
            {
                return true;
            }
        }
        return false;
    }
}