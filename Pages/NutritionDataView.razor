<div class="date-select">
    <label for="date-select">Select date range:</label>
    <select name="date-select" id="date-select" @onchange="SelectedDateChanged">
        <option value="single-day">Single day</option>
        <option value="date-range">Date range</option>
        <option value="month">Calendar month</option>
        <option value="eternity">The beginning of time</option>
    </select>
</div>

<div class="meal-select">
    <label for="meal-select">Select meal type:</label>
    <select id="meal-select" @onchange="SelectedMealChanged">
        <option value="All meals">All meals</option>
        <option value="Breakfast">Breakfast</option>
        <option value="Dinner">Dinner</option>
        <option value="Lunch">Lunch</option>
        <option value="Snacks">Snacks</option>
    </select>
</div>



@switch (SelectedTimePeriod)
{
    case "single-day":
        <label for="single-day-select">Select single day:</label>
        <MudDatePicker id="single-day-select" 
                       MinDate="GetEarliestDay().ToDateTime(TimeOnly.MinValue, DateTimeKind.Local)" 
                       MaxDate="GetLatestDay().ToDateTime(TimeOnly.MaxValue, DateTimeKind.Local)" 
                       Editable @bind-Date="selectedSingleDay" For="@(() => selectedSingleDay)"/>
        break;
    case "date-range":
        <MudDateRangePicker 
            MinDate="GetEarliestDay().ToDateTime(TimeOnly.MinValue, DateTimeKind.Local)" 
            MaxDate="GetLatestDay().ToDateTime(TimeOnly.MaxValue, DateTimeKind.Local)" Editable @bind-DateRange="dateRange"/>
        break;
    case "month":
        <label for="month-select">Select calendar month:</label>
        <InputSelect id="month-select" name="month-select" TValue="int" @bind-Value="SelectedMonth">
            @foreach (int month in PopulateMonthValues())
            {
                <option value="@month">@DateTimeFormatInfo.CurrentInfo.GetMonthName(month)</option>
            }
        </InputSelect>
        break;
}

<div class="nutrition-data-details">
    @switch (SelectedTimePeriod)
    {
      case "single-day":
          <p>On @SelectedSingleDay</p>
          break;
      case "date-range":
          <p>Between @SelectedStartDate and @SelectedEndDate</p>
          break;
      case "month":
          <p>In @SelectedMonth</p>
          break;
      case "eternity":
          <p>Since the beginning of time</p>
          break;
      default:
          SelectedTimePeriod = "eternity";
          break;
    }, for @SelectedMeal, you consumed:
    <!-- Conditionally show li values based on checkbox TODO -->
    <ul>
        <li>@GetCalorieValues() calories,</li>
        <li>@GetFatValues()g of fat,
            <ul>
                <li>of which @GetSatFatValues()g was saturated fat,</li>
                <li>@GetPolyFatValues()g was polyunsaturated fat,</li>
                <li>@GetMonoUnsatFatValues()g was monounsaturated-fat,</li>
                <li>and @GetTransFatValues()g was trans fat.</li>
            </ul>
        </li>
        <li>@GetCalorieValues()g of carbohydrates,
            <ul>
                <li>of which @GetSugarValues()g was sugar,</li>
            </ul>
        </li>
        <li>@GetFibreValues()g of fibre,</li>
        <li>@GetProteinValues()g of protein,</li>
        <li>@GetCholesterolValues()mg of cholesterol,</li>
        <li>and @GetSaltValues()mg of salt.</li>
    </ul>
    Additionally, you consumed these micronutrients:
    <ul>
        <li>@GetPotassiumValues()mg of potassium,</li>
        <li>@GetVitA_Values()% of the RI for vitamin A,</li>
        <li>@GetVitC_Values()% of the RI for vitamin C,</li>
        <li>@GetCalciumValues()% of the RI for calcium,</li>
        <li>and @GetIronValues()% of the RI for iron.</li>
    </ul>
    <p>There were no notes.</p>
</div>